USER_NAME = txcorp
IPS_ROOT = /scratch/scratchdirs/sveta/ips
OUTPUT_PREFIX = 

RUN_ID = Run                   # Indentifier for this simulation run
TOKAMAK_ID = MODEL               # Identifier for tokamak simulated
SHOT_NUMBER = 0001              # Identifier for specific case for this tokamak (not necessarily a number)

SIM_NAME = ${RUN_ID}_${TOKAMAK_ID}_${SHOT_NUMBER}  # Name of current simulation
SIM_ROOT = $IPS_ROOT/components/drivers/${USER_NAME}/$SIM_NAME                      # Where to put results from this simulation

PLASMA_STATE_WORK_DIR = $SIM_ROOT/work/plasma_state # Where to put plasma state files as the simulation evolves 
CURRENT_STATE = ${SIM_NAME}_ps.cdf
PRIOR_STATE = ${SIM_NAME}_psp.cdf
NEXT_STATE = ${SIM_NAME}_ps_next.cdf
CURRENT_EQDSK = ${SIM_NAME}_ps.geq
CURRENT_CQL = ${SIM_NAME}_ps_CQL.nc
CURRENT_DQL = ${SIM_NAME}_ps_DQL.nc

PLASMA_STATE_FILES1 = $CURRENT_STATE $PRIOR_STATE  $NEXT_STATE  # What files constitute the plasma state
PLASMA_STATE_FILES = $PLASMA_STATE_FILES1  $CURRENT_EQDSK $CURRENT_CQL $CURRENT_DQL

PLATFORM =                                          # Simulation Platform
BATCH_SYSTEM =                                      # Which Batch system to use
MPIRUN = mpirun                                     # How are MPI jobs launched (interactively)
SIMULATION_MODE = SINGLE_STEP | RESTART             # Simulation mode 
INITIALIZATION_MODE =                               # Initialization Mode
MACHINE_CONFIG_FILE =                               # Machine configuration file

[PORTS]
   NAMES = INIT DRIVER EPA RF_IC FP
   
   [[DRIVER]]                                       # REQUIRED Port section 
      IMPLEMENTATION = GENERIC_IPS_DRIVER
                                                    
                                                                                                        # How is the simulation initialized 
                                                    # (generate the very first state - if needed)
   [[INIT]]                                         # REQUIRED Port section (check currently 
      IMPLEMENTATION = minimal_state_init 
   
  [[RF_IC]]
      IMPLEMENTATION = model_RF_IC 

  [[FP]]
      IMPLEMENTATION = minority_model_FP

   [[EPA]]
      IMPLEMENTATION = model_EPA
           
# Individual configuration sections

# Component specification (entries similar for all components)
# NAME entry MUST match the name of the python class that implements the component

[minimal_state_init]
    CLASS = minimal_state_init
    SUB_CLASS = dbb
    NAME = minimal_state_init
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
        INPUT_DIR = $IPS_ROOT/components/$CLASS/$SUB_CLASS
        INPUT_FILES = 
        OUTPUT_FILES = $CURRENT_STATE 
    SCRIPT = $BIN_PATH/minimal_state_init.py

[GENERIC_IPS_DRIVER]
    CLASS = drivers
    SUB_CLASS = txcorp
    NAME = generic_driver 
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
        INPUT_DIR = $IPS_ROOT/components/$CLASS/$SUB_CLASS
        INPUT_FILES = 
        OUTPUT_FILES = 
    SCRIPT = $INPUT_DIR/txcorp_driver.py
    
[model_EPA]
    CLASS = epa
    SUB_CLASS = model_epa
    NAME = model_EPA
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
    INPUT_DIR = $IPS_ROOT/components/drivers/$USER_NAME
        INPUT_FILES = model_epa_input.nml
        OUTPUT_FILES = 
    SCRIPT = $BIN_PATH/model_epa.py

[model_RF_IC]
    CLASS = rf
    SUB_CLASS = model_RF_IC
    NAME = model_RF_IC 
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
    INPUT_DIR = $IPS_ROOT/components/drivers/$USER_NAME
        INPUT_FILES = model_RF_IC_input.nml
        OUTPUT_FILES =
    SCRIPT = $BIN_PATH/model_RF_IC.py

[minority_model_FP]
    CLASS = fp
    SUB_CLASS = minority_model
    NAME = minority_model_FP 
    NPROC = 1
    BIN_PATH = $IPS_ROOT/bin
    INPUT_DIR = $IPS_ROOT/components/$CLASS/$SUB_CLASS
        INPUT_FILES = minority_model_FP.nml
        OUTPUT_FILES =
    SCRIPT = $BIN_PATH/minority_model_FP_2.py

# Time loop specification (two modes for now) EXPLICIT | REGULAR
# For MODE = REGULAR, the framework uses the variables START, FINISH, and NSTEP
# For MODE = EXPLICIT, the frame work uses the variable VALUES (space separated list of time values)

[TIME_LOOP]
   MODE = REGULAR
   START = 0.05
   FINISH = 4.0 
   NSTEP  = 400 
   VALUES = 
