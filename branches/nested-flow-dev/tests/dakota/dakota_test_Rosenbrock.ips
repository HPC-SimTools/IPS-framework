#IPS_ROOT = /home/elwasif/Projects/SWIM/cswim/ips/branches/ips-CAEBAT    # Root of IPS component and binary tree
OUTPUT_PREFIX = 
#NODES=1
#CORES_PER_NODE=1


RUN_ID = DAKOTA_Rosenbrock                   # Indentifier for this simulation run
TOKAMAK_ID = TEST
SHOT_NUMBER = 1                  # Numerical identifier for specific case

SIM_NAME = ${RUN_ID}_${TOKAMAK_ID}_${SHOT_NUMBER}  # Name of current simulation
SIM_ROOT = $IPS_ROOT/${SIM_NAME}                   # Where to put results from this simulation

LOG_FILE = $SIM_ROOT/${RUN_ID}.log
LOG_LEVEL = DEBUG

# Stuff for connecting to the portal - PORTAL_URL and RUNID_URL are machine dependent
#USER   = elwasif

# A run comment picked up by the portal
RUN_COMMENT = Testing dakota

# Specification of plasma state files

# Where to put plasma state files as the simulation evolves 
PLASMA_STATE_WORK_DIR = $SIM_ROOT/work/plasma_state

# Specify what files constitute the plasma state - N.B. not all components need all files
PLASMA_STATE_FILES = 

# Names of ports to be used.  An implementation and configuration must be specified for
# each port

[PORTS]
   NAMES = DRIVER 
   
# DRIVER port is called by the framework.  It is required, causes exception.

   [[DRIVER]]                                       # REQUIRED Port section 
      IMPLEMENTATION = ROSE
                                                    
# INIT port is called by the framework.  It typically produces the very first set of
# plasma state files for SIMULATION_MODE = NORMAL.  It does not raise and exception
# if missing.
                                                    
   [[INIT]]   
      IMPLEMENTATION =  

# Specification of IMPLEMENTATION for each physics port called out in PORTS list.
# Additional specifications may be present that are not in the PORTS list

# Specification of configuration for each port called out in PORTS list.
# Additional specifications may be present that are not in the PORTS list
# NAME variable MUST match the name of the python class that implements the component

[ROSE]
    CLASS = DAKOTA
    SUB_CLASS = TEST
    NAME = ResenbrockDriver
    NPROC = 1
    BIN_PATH = $IPS_ROOT/tests/dakota
    INPUT_DIR = $IPS_ROOT/components/drivers/hello
    INPUT_FILES = 
    OUTPUT_FILES =  
    SCRIPT = $BIN_PATH/dakota_test_Rosenbrock.py

# Time loop sepecification (two modes for now) EXPLICIT | REGULAR
# For MODE = REGULAR, the framework uses the variables START, FINISH, and NSTEP
# For MODE = EXPLICIT, the frame work uses the variable VALUES (space separated list of time values)

[TIME_LOOP]
   MODE = REGULAR
   START = 0 
   FINISH = 10 
   NSTEP  = 10
