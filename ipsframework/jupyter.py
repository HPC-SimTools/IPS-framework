"""
This module is designed to help generate JupyterNotebooks to be used with IPS Portal analysis.
Some parts of the script will need direction from users on the Framework side to generate.

Note that this module is currently biased towards working with NERSC (jupyter.nersc.gov), so will attempt to import specific libraries.

To see available libraries on NERSC, run:
  !pip list

...in a shell on Jupyter NERSC.
"""

from os.path import sep
from typing import List

import nbformat as nbf


def _get_state_file_notebook_code_cell(variable: str, tags: List[str]):
    itemsep = ',\n'
    return f"""import os

# Uncomment below line to use any state files saved
#{variable} = os.listdir('data')
# files created during the run
{variable} = [{itemsep.join([f"'data{sep}{file}'" for file in tags])}]
"""

def stage_jupyter_notebook(dest: str, src: str, tags: List[str], variable_name: str, index: int):
    """"""
    # to avoid conversion, use as_version=nbf.NO_CONVERT
    # 
    nb: nbf.NotebookNode = nbf.read(src, as_version=4)

    header = '# Next cell generated by IPS Framework'
    nb['cells'] = nb['cells'][:index] + [
        nbf.v4.new_markdown_cell(header), 
        nbf.v4.new_code_cell(_get_state_file_notebook_code_cell(variable_name, tags))
    ] + nb['cells'][index:]

    nbf.validate(nb)
    with open(dest, 'w') as f:
        nbf.write(nb, f)
