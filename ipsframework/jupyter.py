"""
This module is designed to help generate JupyterNotebooks to be used with IPS Portal analysis.
Some parts of the script will need direction from users on the Framework side to generate.

Note that this module is currently biased towards working with NERSC (jupyter.nersc.gov), so will attempt to import specific libraries.

To see available libraries on NERSC, run:
  !pip list

...in a shell on Jupyter NERSC.
"""

from os.path import sep
from typing import List

import nbformat as nbf


def _get_multi_state_file_notebook_code(state_file_paths: List[str]) -> str:
    """TODO this is currently just an example."""
    return f"""FILES = [{','.join([f"'data{sep}{file}'" for file in state_file_paths])}]
mapping = {{}}
for file in FILES:
    with open(file, 'rb') as f:
        mapping[file] = f.read()
print(mapping)
"""


def _get_nb_v4(code: str):
    """Returns an nbf.v4 object"""
    nb = nbf.v4.new_notebook()
    text = '# AUTOGENERATED from IPS Framework'

    nb['cells'] = [nbf.v4.new_markdown_cell(text), nbf.v4.new_code_cell(code)]
    return nb


def create_multi_state_file_notebook(state_file_paths: List[str], notebook_path: str):
    """
    TODO

    Writes notebook which will try to load multiple state files

    for now, will just store all data in a dictionary of filepath str to raw bytes
    """

    code = _get_multi_state_file_notebook_code(state_file_paths)
    nb = _get_nb_v4(code)

    with open(notebook_path, 'w') as f:
        nbf.write(nb, f)
