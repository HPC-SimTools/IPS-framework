name: CI

on: [push, pull_request]

jobs:

  static_analysis:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        environment-file: .github/workflows/conda_env/environment_static_analysis.yml
    - name: flake8
      run: flake8
    - name: pylint
      run: pylint ipsframework tests
    - name: bandit
      run: bandit -lll ipsframework/*.py
    - name: codespell
      run: codespell

  tests:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: 3.6
            conda_env: 'minimal'
          - os: ubuntu-latest
            python-version: 3.7
            conda_env: 'dask_2.5.2' # same as NERSC Cori module python/3.7-anaconda-2019.10
          - os: ubuntu-latest
            python-version: 3.8
            conda_env: 'dask_2.30.0' # same as NERSC Cori module python/3.8-anaconda-2020.11
          - os: ubuntu-latest
            python-version: 3.9
            conda_env: 'linux'
          - os: ubuntu-latest
            python-version: "3.10"
            conda_env: 'minimal'
          - os: macos-latest
            python-version: 3.9
            conda_env: 'macos'

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        environment-file: .github/workflows/conda_env/environment_${{ matrix.conda_env }}.yml
    - name: Install IPS (in develop mode)
      run: python -m pip install -e .
    - name: testing running IPS (--help)
      run: ips.py --help
    - name: testing showing IPS version (--version)
      run: ips.py --version
    - name: Test with pytest
      run: python -m pytest --cov --cov-report=xml --cov-report=term --timeout=60
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2

  tests-wsl:

    runs-on: windows-latest
    timeout-minutes: 10

    defaults:
       run:
         shell: wsl-bash {0}

    steps:
    - uses: actions/checkout@v2
    - uses: Vampire/setup-wsl@v1
      with:
          additional-packages:
              python-is-python3
              python3-pip
              python3-pytest-cov
              python3-pytest-timeout
              python3-psutil
    - name: Install IPS (in develop mode)
      run: python -m pip install -e .
    - name: testing running IPS (--help)
      run: ips.py --help
    - name: testing showing IPS version (--version)
      run: ips.py --version
    - name: Test with pytest
      run: python -m pytest --cov --timeout=60
